{
    "sourceFile": "src/App.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 2,
            "patches": [
                {
                    "date": 1714997609042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1714997616378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,9 +43,9 @@\n   const generateId = () => {\n     return Math.floor(Math.random() * 2137);\n   };\n   const addTodo = (newTodoTitle: string) => {\n-    postTodo({ title: newTodoTitle, userId: USER_ID, completed: false }).then(\n+    postTodo({ title: newTodoTitle, userId: USER_ID, completed: false, id: generateId() }).then(\n       newTodo => {\n         setTodos(prevTodos => [...prevTodos, newTodo]);\n       },\n     );\n"
                },
                {
                    "date": 1714997719194,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,8 +42,9 @@\n \n   const generateId = () => {\n     return Math.floor(Math.random() * 2137);\n   };\n+  \n   const addTodo = (newTodoTitle: string) => {\n     postTodo({\n       title: newTodoTitle,\n       userId: USER_ID,\n"
                }
            ],
            "date": 1714997609042,
            "name": "Commit-0",
            "content": "/* eslint-disable jsx-a11y/label-has-associated-control */\n/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useCallback, useEffect, useMemo, useState } from 'react';\nimport { UserWarning } from './UserWarning';\n\nimport { USER_ID, getTodos, postTodo } from './api/todos';\n\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\nimport { Header } from './components/Header';\nimport { TodoList } from './components/TodoList';\nimport { Footer } from './components/Footer';\nimport { ErrorNotification, ErrorType } from './components/ErrorNotification';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [error, setError] = useState<ErrorType | null>(null);\n  const [filter, setFilter] = useState<Filter>('all');\n\n  useEffect(() => {\n    getTodos()\n      .then(data => setTodos(data))\n      .catch(() => setError('load'));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return todos.filter(todo => {\n      switch (filter) {\n        case 'completed':\n          return todo.completed;\n        case 'active':\n          return !todo.completed;\n        case 'all':\n          return todo;\n        default:\n          return true;\n      }\n    });\n  }, [todos, filter]);\n\n  const handleClosingError = useCallback(() => setError(null), [setError]);\n\n  const generateId = () => {\n    return Math.floor(Math.random() * 2137)\n  }\n  const addTodo = (newTodoTitle: string) => {\n    postTodo({ title: newTodoTitle, userId: USER_ID, completed: false }).then(\n      newTodo => {\n        setTodos(prevTodos => [...prevTodos, newTodo]);\n      },\n    );\n  };\n\n  if (!USER_ID) {\n    return <UserWarning />;\n  }\n\n  return (\n    <div className=\"todoapp\">\n      <h1 className=\"todoapp__title\">todos</h1>\n\n      <div className=\"todoapp__content\">\n        <Header todos={todos} addTodo={addTodo} />\n        <TodoList todos={filteredTodos} />\n        <Footer todos={todos} filter={filter} setFilter={setFilter} />\n      </div>\n      <ErrorNotification\n        errorType={error}\n        handleClosingError={handleClosingError}\n      />\n    </div>\n  );\n};\n"
        }
    ]
}